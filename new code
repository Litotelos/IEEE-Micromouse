
#include "mbed.h"

//Motors Control
PwmOut pwm1 (p21); 
DigitalOut dir1 (p20);
PwmOut pwm2 (p22); 
DigitalOut dir2 (p19);
//LED's
DigitalOut Led_F1(LED1);
DigitalOut Led_F2(LED2);
DigitalOut Led_F3(LED3);
DigitalOut Led_F4(LED4);


//IR Sensors
DigitalIn IR1 (p10);
DigitalIn IR2 (p30);
DigitalIn IR3 (p12);
DigitalIn IR4 (p13);
DigitalIn ULTRA (p14);


int move_forwads(){
    dir1=1;
    dir2=1;

    pwm1.period_ms(10);
    pwm2.period_ms(10);
    pwm1=0.5;
    pwm2=0.5;
    wait(3);

    pwm1=0;
    pwm2=0;
    wait(1);



}

// int right_wheel_forwards(){
    
//     dir1=1;
//     pwm1.period_ms(10);
//     pwm1=0.5;
//     wait(3);
//     pwm1=0;
//     wait(1);
    
        
// }
// int left_wheel_forwards(){
    
//     dir2=1;
//     pwm2.period_ms(10);
//     pwm2=0.5;
//     wait(3);
//     pwm2=0;
//     wait(1);
    
        
// }


int right_wheel_backwards(){
    
    dir1=0;
    pwm1.period_ms(10);
    pwm1=0.5;
    wait(3);
    pwm1=0;
    wait(3);
    
  
      
}

int stop(){
    pwm1=0;
    pwm2=0;
    wait(3);
}

int move(){
    //right_wheel_forwards();
        int sensor_val1=IR1.read();
        int sensor_val2=IR2.read();
        //int sensor_val2=IR2.read();

        //IR1.read();
        if (sensor_val1==1 && sensor_val2 ==1){
            move_forwads();
        }
        else{
            return 0;
        }
     
        
}


//   int Sensor_Reading1(){
//        Led_F1=0;
     
//            int sensor_val=IR1.read();
        
        
//            IR1.read();
//            while (sensor_val==1){
//                Led_F1=1;
//                wait(1);
//                return Led_F1;
//                IR1.read();
//            }
//   }







int main(){
   
        //move();
        //pwm1=0;
        //move();
        
        move_forwads();
        
        while(1){
        int sensor_val1=IR1.read();
        int sensor_val2=IR2.read();
        if (sensor_val1==1 && sensor_val2==0){
            //turn left
            pwm2=0;
            dir1=1;
            pwm1.period_ms(10);
            pwm1=0.5;
            wait(1.3);
            pwm1=0;
            wait(1);
            move_forwads();
            //move();
            
        }

        if (sensor_val1==0 && sensor_val2==1){
            //turn right
            pwm1=0;
            dir2=1;
            pwm2.period_ms(10);
            pwm2=0.5;
            wait(1.3);
            pwm2=0;
            wait(1);
            move_forwads();
            //move();

        }
        };
       

    

     

    
        // //right_wheel_forwards();
        // int sensor_val=IR1.read();

        // //IR1.read();
        // if (sensor_val==1){
        //     pwm1=0;
            
        //     wait(3);
        // }
        // else{
        //     right_wheel_forwards();      
        // }
         return 0;
    }
   
    
    
