

#include "mbed.h"

//Motors Control
PwmOut pwm1 (p21); 
DigitalOut dir1 (p20); //left wheel
PwmOut pwm2 (p22); 
DigitalOut dir2 (p19); // right wheel
//LED's
DigitalOut Led_F1(LED1);
DigitalOut Led_F2(LED2);
DigitalOut Led_F3(LED3);
DigitalOut Led_F4(LED4);


//IR Sensors
DigitalIn IR1 (p10); //right sensor
DigitalIn IR2 (p30);//left sensor
DigitalIn IR3 (p12);
DigitalIn IR4 (p13);
DigitalIn ULTRA (p14);


int move_forwads(){
    dir1=1;
    dir2=1;

    pwm1.period_ms(10);
    pwm2.period_ms(10);
    pwm1=0.5;
    pwm2=0.5;
    wait(4);

    pwm1=0;
    pwm2=0;
    wait(1);



}

int right_wheel_forwards(){
    
     dir1=1;
     pwm1.period_ms(10);
     pwm1=0.5;
     wait(3);
     pwm1=0;
     wait(1);
}
    
        
// }
 int left_wheel_forwards(){
    
     dir2=1;
     pwm2.period_ms(10);
     pwm2=0.5;
     wait(1.3);
     pwm2=0;
     wait(1);
    
        
 }


int right_wheel_backwards(){
    
    dir1=0;
    pwm1.period_ms(10);
    pwm1=0.5;
    wait(2);
    pwm1=0;
    wait(3);
    
  
      
}

int stop(){
    pwm1=0;
    pwm2=0;
    wait(3);
}

int move(){
    //right_wheel_forwards();
        int sensor_val1=IR1.read();
        int sensor_val2=IR2.read();
        //int sensor_val2=IR2.read();

        //IR1.read();
        if (sensor_val1==1 && sensor_val2 ==1){
            move_forwads();
        }
        else{
            return 0;
        }
     
        
}


//   int Sensor_Reading1(){
//        Led_F1=0;
     
//            int sensor_val=IR1.read();
        
        
//            IR1.read();
//            while (sensor_val==1){
//                Led_F1=1;
//                wait(1);
//                return Led_F1;
//                IR1.read();
//            }
//   }







int main(){
    // move();
    // pwm1=0;
    // move();
    //int sensor_val1 = IR1.read();
    //int sensor_val2 = IR2.read();

    move_forwads();
    wait(1);
    left_wheel_forwards();
    dir1=1;
    dir2=1;

    pwm1.period_ms(10);
    pwm2.period_ms(10);
    pwm1=0.5;
    pwm2=0.5;
    wait(8.3);

    pwm1=0;
    pwm2=0;
    wait(1);
    
    // while(1){
    //     // Continuously read the sensor values inside the loop
    //     //int sensor_val1 = IR1.read();
    //     //int sensor_val2 = IR2.read();

    
    //     // Check for left turn condition
    //     if (sensor_val1 == 1 && sensor_val2 == 0) {
    //         // Turn left
    //         pwm2 = 0;
    //         pwm1 = 0;
    //         dir2 = 1;
    //         pwm2.period_ms(10);
    //         pwm2 = 0.5;
    //         wait(1);
    //         pwm2 = 0;
    //         wait(1);
    //         // Re-read the sensors
    //         sensor_val1 = IR1.read();
    //         sensor_val2 = IR2.read();
    //     }
        

    //     // Check for right turn condition
    //     if (sensor_val1 == 0 && sensor_val2 == 1) {
    //         // Turn right
    //         pwm1 = 0;
    //         pwm2 = 0;
    //         dir1 = 1;
    //         pwm1.period_ms(10);
    //         pwm1 = 0.5;
    //         wait(1);
    //         pwm1 = 0;
    //         wait(1);
    //         // Re-read the sensors
    //         sensor_val1 = IR1.read();
    //         sensor_val2 = IR2.read();
            
    //     }
        
    //     // If both sensors are high, move forward
    //     if (sensor_val1 == 1 && sensor_val2 == 1) {
    //         move_forwads();
    //         // Update sensor values inside the loop
    //         sensor_val1 = IR1.read();
    //         sensor_val2 = IR2.read();
    //     }
    // }
}

   
    
    
